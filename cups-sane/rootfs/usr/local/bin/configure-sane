#!/command/with-contenv bashio
# shellcheck shell=bash
#
# CUPS AirPrint & SANE AirScan Unified Add-on for Home Assistant
# SANE Configuration Script
# Copyright (C) 2025 CatKinKitKat
# License: AGPL-3.0-or-later

set -euo pipefail

# Get configuration options from Home Assistant with error handling
set +e  # Temporarily disable exit on error for config reading
ALLOWED_NETWORKS=$(bashio::config 'allowed_networks' 2>/dev/null || echo '[]')
set -e  # Re-enable exit on error

bashio::log.info "Configuring minimalist SANE setup..."

mkdir -p /etc/sane.d

# saned.conf — create only if missing
bashio::log.info "Ensuring saned.conf exists (no overwrite)..."
if [ ! -f /etc/sane.d/saned.conf ]; then
  cat > /etc/sane.d/saned.conf << 'EOF'
# saned.conf - Auto-generated minimalist configuration

## Access list
# Allowed networks for scanning access
EOF
  # Add allowed networks
  for network in $(echo "${ALLOWED_NETWORKS}" | jq -r '.[]' 2>/dev/null || echo "192.168.0.0/16 10.0.0.0/8 172.16.0.0/12 127.0.0.1"); do
      echo "${network}" >> /etc/sane.d/saned.conf
  done
else
  bashio::log.info "saned.conf already present; leaving it unchanged."
fi

# net.conf — create only if missing
bashio::log.info "Ensuring net.conf exists (no overwrite)..."
if [ ! -f /etc/sane.d/net.conf ]; then
  HA_IP=$(ip route get 1.1.1.1 | awk '{print $7; exit}' 2>/dev/null || echo "127.0.0.1")
  cat > /etc/sane.d/net.conf << EOF
# net backend config file - Auto-generated
localhost
${HA_IP}
# Connect to SANE daemon on these hosts for network scanning
EOF
else
  bashio::log.info "net.conf already present; leaving it unchanged."
fi

# dll.conf — use existing, else template, else generate a sane default
bashio::log.info "Ensuring dll.conf exists (no overwrite)..."
if [ -f /etc/sane.d/dll.conf ]; then
  bashio::log.info "Using existing dll.conf with manually specified backends."
else
  bashio::log.info "Creating default dll.conf with basic backends."
  cat > /etc/sane.d/dll.conf << 'EOF'
# Core USB backend (moved to top)
usb

# Network backends
net
airscan

# HP (market leader ~34%)
hpaio

# Epson (~22%)
epson2
epson

# Canon (~20%)
pixma
canon

# Brother (~10%)
brother

# Ricoh (~3-4%)
ricoh
ricoh2

# Other vendors (<3% each, mostly legacy)
genesys
gt68xx
microtek
microtek2
mustek
mustek_usb
mustek_usb2
snapscan
EOF
fi

# airscan.conf — create only if missing
bashio::log.info "Ensuring airscan.conf exists (no overwrite)..."
if [ ! -f /etc/sane.d/airscan.conf ]; then
  cat > /etc/sane.d/airscan.conf << 'EOF'
# airscan.conf - Auto-generated configuration for network scanner discovery

[devices]
# Manually configured devices can be added here
# Examples for common home network (192.168.1.x):
# "Canon PIXMA" = http://192.168.1.150:80/eSCL
# "HP LaserJet" = http://192.168.1.151:8080/eSCL
# "Epson Scanner" = http://192.168.1.152:9095/eSCL

[options]
discovery = enable
model = network
protocol = auto
ws-discovery = fast
pretend-local = true

[debug]
enable = true

[blacklist]
# No devices blacklisted by default
EOF
else
  bashio::log.info "airscan.conf already present; leaving it unchanged."
fi

# Permissions & lock dir
chown -R root:root /etc/sane.d/
chmod 644 /etc/sane.d/*.conf || true
mkdir -p /var/lock/sane
chmod 755 /var/lock/sane

bashio::log.info "SANE minimalist configuration completed (existing files preserved)."
bashio::log.info "Auto-detection enabled for USB and network scanners."
bashio::log.info "AirScan configured for network scanner discovery."
