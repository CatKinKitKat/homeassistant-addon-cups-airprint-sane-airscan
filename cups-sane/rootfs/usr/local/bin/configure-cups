#!/command/with-contenv bashio
#
# CUPS AirPrint & SANE AirScan Unified Add-on for Home Assistant
# CUPS Configuration Script
# Copyright (C) 2025 CatKinKitKat
# License: AGPL-3.0-or-later

set -euo pipefail

# Get configuration options from Home Assistant with error handling
set +e  # Temporarily disable exit on error for config reading
LOG_LEVEL=$(bashio::config 'log_level' 2>/dev/null || echo "info")
SHARE_PRINTERS=$(bashio::config 'share_printers' 2>/dev/null || echo "true")
ALLOW_FROM=$(bashio::config 'allow_from' 2>/dev/null || echo '[]')
CUPS_LOG_TO_STDOUT=$(bashio::config 'cups_log_to_stdout' 2>/dev/null || echo 'true')
CUPS_ACCESS_LOG=$(bashio::config 'cups_access_log' 2>/dev/null || echo '/var/log/cups/access_log')
CUPS_ERROR_LOG=$(bashio::config 'cups_error_log' 2>/dev/null || echo '/var/log/cups/error_log')
CUPS_PAGE_LOG=$(bashio::config 'cups_page_log' 2>/dev/null || echo '/var/log/cups/page_log')
DEBUG_MODE=$(bashio::config 'debug_mode' 2>/dev/null || echo 'false')
set -e  # Re-enable exit on error

bashio::log.info "Configuring minimalist CUPS setup..."

# Create persistent config if it doesn't exist (seed from image defaults)
if [ ! -d /config/cups ]; then
    bashio::log.info "Creating initial CUPS configuration..."
    mkdir -p /config/cups
    cp -r /etc/cups/* /config/cups/ 2>/dev/null || true
fi

# Use persistent configuration
rm -rf /etc/cups
ln -sf /config/cups /etc/cups

# Determine log destinations (used only if we need to generate a new cupsd.conf)
if bashio::var.true "${CUPS_LOG_TO_STDOUT}"; then
  ACCESS_LOG='-'
  ERROR_LOG='-'
  PAGE_LOG='-'
  bashio::log.info "CUPS logs directed to stdout"
else
  ACCESS_LOG="${CUPS_ACCESS_LOG}"
  ERROR_LOG="${CUPS_ERROR_LOG}"
  PAGE_LOG="${CUPS_PAGE_LOG}"
  bashio::log.info "CUPS logs directed to files under /var/log/cups (tailing will be enabled)"
fi

# cupsd.conf — create only if missing
bashio::log.info "Ensuring cupsd.conf exists (no overwrite)..."
if [ ! -f /etc/cups/cupsd.conf ]; then
  cat > /etc/cups/cupsd.conf << EOF
# cupsd.conf - Auto-generated minimalist configuration
LogLevel ${LOG_LEVEL}
MaxLogSize 0
ErrorPolicy retry-job
ErrorLog ${ERROR_LOG}
AccessLog ${ACCESS_LOG}
PageLog ${PAGE_LOG}

# Network access
Listen /run/cups/cups.sock
Listen 0.0.0.0:631
Port 631

# AirPrint/Bonjour support
Browsing $(bashio::var.true "${SHARE_PRINTERS}" && echo "Yes" || echo "No")
BrowseLocalProtocols all

# Authentication
DefaultAuthType Basic
WebInterface Yes

# Access control - Allow from configured networks
<Location />
  Order allow,deny
  Allow all
EOF

  # Add allowed networks (legacy Allow directives for compatibility)
  for network in $(echo "${ALLOW_FROM}" | jq -r '.[]' 2>/dev/null || echo "192.168.0.0/16 10.0.0.0/8 172.16.0.0/12 127.0.0.1"); do
      echo "  Allow from ${network}" >> /etc/cups/cupsd.conf
  done

  cat >> /etc/cups/cupsd.conf << 'EOF'
</Location>

<Location /admin>
  Order allow,deny
  Allow all
EOF

  for network in $(echo "${ALLOW_FROM}" | jq -r '.[]' 2>/dev/null || echo "192.168.0.0/16 10.0.0.0/8 172.16.0.0/12 127.0.0.1"); do
      echo "  Allow from ${network}" >> /etc/cups/cupsd.conf
  done

  cat >> /etc/cups/cupsd.conf << 'EOF'
</Location>

<Location /admin/conf>
  AuthType Default
  Require user @SYSTEM
  Order allow,deny
  Allow all
</Location>

# Default policy for printing
<Policy default>
  <Limit Create-Job Print-Job Print-URI Validate-Job>
    Order deny,allow
  </Limit>

  <Limit All>
    Order deny,allow
  </Limit>
</Policy>
EOF
else
  bashio::log.info "cupsd.conf already present; leaving it unchanged."
fi

# Avahi for AirPrint — create only if missing and sharing enabled
if bashio::var.true "${SHARE_PRINTERS}"; then
    bashio::log.info "Ensuring Avahi config exists (no overwrite)..."
    mkdir -p /etc/avahi
    if [ ! -f /etc/avahi/avahi-daemon.conf ]; then
      cat > /etc/avahi/avahi-daemon.conf << 'EOF'
# avahi-daemon.conf - Auto-generated configuration
[server]
use-ipv4=yes
use-ipv6=yes
ratelimit-interval-usec=1000000
ratelimit-burst=1000

[wide-area]
enable-wide-area=yes

[publish]
publish-hinfo=no
publish-workstation=no

[reflector]
enable-reflector=yes
EOF
    else
      bashio::log.info "avahi-daemon.conf already present; leaving it unchanged."
    fi
fi

# Permissions & runtime dirs
chown -R root:lp /etc/cups/
chmod 755 /var/spool/cups || true
mkdir -p /run/cups
chmod 755 /run/cups

bashio::log.info "CUPS minimalist configuration completed (existing files preserved)."
if bashio::var.true "${DEBUG_MODE}"; then
  bashio::log.info "Dumping cupsd.conf:"; sed 's/^/CUPS-CONF> /' /etc/cups/cupsd.conf || true
fi
bashio::log.info "Universal printer support enabled."
if bashio::var.true "${SHARE_PRINTERS}"; then
    bashio::log.info "AirPrint configured for service discovery."
fi
